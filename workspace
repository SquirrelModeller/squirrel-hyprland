#!/bin/bash

ic=(一 二 三 四 五 六 七 八 九 〇)

declare -A ws_states

for num in $(hyprctl workspaces | grep "ID" | grep -v lastwindowtitle | awk '{print $3}'); do
  ws_states["$num"]="occupied"
done

for num in $(hyprctl monitors | grep -B 4 "focused: yes" | awk 'NR==1{print $3}'); do
  ws_states["$num"]="focused"
  focused_ws="$num"
  mon=$(hyprctl monitors | grep -B 2 "\($num\)" | awk 'NR==1{print $2}')
done

workspaces() {
  case ${1%%>>*} in
    "workspace")
      ws_num=${1##*>>}
      if [[ $ws_num != "special" ]]; then
        ws_states["$focused_ws"]="occupied"
        ws_states["$ws_num"]="focused"
        focused_ws="$ws_num"
      fi
      ;;
    "focusedmon")
      ws_num=${1##*,}
      mon=${1#*>>}; mon=${mon%%,*}
      ws_states["$focused_ws"]="occupied"
      ws_states["$ws_num"]="focused"
      focused_ws="$ws_num"
      ;;
    "moveworkspace")
      ws_num=${1#*>>}; ws_num=${ws_num%%,*}
      if [[ ${1##*,} == "$mon" ]]; then
        ws_states["$focused_ws"]="occupied"
        ws_states["$ws_num"]="focused"
        focused_ws="$ws_num"
      fi
      ;;
    "createworkspace")
      ws_num=${1##*>>}
      ws_states["$ws_num"]="occupied"
      ;;
    "destroyworkspace")
      ws_num=${1##*>>}
      unset ws_states["$ws_num"]
      ;;
  esac
}

module() {
  wknames=(0)
  for i in "${!ic[@]}"; do
    state=${ws_states["$((i+1))"]}
    if [[ -z "$state" ]]; then
      state="empty"
    fi
    wknames+=("$state")
  done

  echo 	"(eventbox :onscroll \"echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g' | xargs hyprctl dispatch workspace\" \
            (box	:class \"works  workspaces\"	:orientation \"h\" :spacing 5 :space-evenly \"false\" :halign \"start\"	\
                "$(for i in "${!ic[@]}"; do printf "(button :onclick \"hyprctl dispatch workspace $((i+1))\" :class \"ws-btn ${wknames[i+1]}\" \"${ic[i]}\")"; done) " \
            )\
          )"
}

module

socat -u UNIX-CONNECT:/tmp/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock - | while read -r event; do
workspaces "$event"
module
done
